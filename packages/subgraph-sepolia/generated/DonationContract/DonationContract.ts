// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class CampaignClosed extends ethereum.Event {
  get params(): CampaignClosed__Params {
    return new CampaignClosed__Params(this);
  }
}

export class CampaignClosed__Params {
  _event: CampaignClosed;

  constructor(event: CampaignClosed) {
    this._event = event;
  }

  get campaignId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class CampaignCreated extends ethereum.Event {
  get params(): CampaignCreated__Params {
    return new CampaignCreated__Params(this);
  }
}

export class CampaignCreated__Params {
  _event: CampaignCreated;

  constructor(event: CampaignCreated) {
    this._event = event;
  }

  get campaignId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get campaignOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get campaignName(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class DonationReceived extends ethereum.Event {
  get params(): DonationReceived__Params {
    return new DonationReceived__Params(this);
  }
}

export class DonationReceived__Params {
  _event: DonationReceived;

  constructor(event: DonationReceived) {
    this._event = event;
  }

  get campaignId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get donor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenAddresses(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get tokenAmounts(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }
}

export class DonationContract__campaignsResult {
  value0: Address;
  value1: boolean;
  value2: string;
  value3: BigInt;
  value4: Address;

  constructor(
    value0: Address,
    value1: boolean,
    value2: string,
    value3: BigInt,
    value4: Address,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    return map;
  }

  getCampaignOwner(): Address {
    return this.value0;
  }

  getIsLive(): boolean {
    return this.value1;
  }

  getCampaignName(): string {
    return this.value2;
  }

  getGoalAmount(): BigInt {
    return this.value3;
  }

  getGoalToken(): Address {
    return this.value4;
  }
}

export class DonationContract extends ethereum.SmartContract {
  static bind(address: Address): DonationContract {
    return new DonationContract("DonationContract", address);
  }

  campaigns(param0: BigInt): DonationContract__campaignsResult {
    let result = super.call(
      "campaigns",
      "campaigns(uint256):(address,bool,string,uint256,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new DonationContract__campaignsResult(
      result[0].toAddress(),
      result[1].toBoolean(),
      result[2].toString(),
      result[3].toBigInt(),
      result[4].toAddress(),
    );
  }

  try_campaigns(
    param0: BigInt,
  ): ethereum.CallResult<DonationContract__campaignsResult> {
    let result = super.tryCall(
      "campaigns",
      "campaigns(uint256):(address,bool,string,uint256,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DonationContract__campaignsResult(
        value[0].toAddress(),
        value[1].toBoolean(),
        value[2].toString(),
        value[3].toBigInt(),
        value[4].toAddress(),
      ),
    );
  }
}

export class CloseCampaignCall extends ethereum.Call {
  get inputs(): CloseCampaignCall__Inputs {
    return new CloseCampaignCall__Inputs(this);
  }

  get outputs(): CloseCampaignCall__Outputs {
    return new CloseCampaignCall__Outputs(this);
  }
}

export class CloseCampaignCall__Inputs {
  _call: CloseCampaignCall;

  constructor(call: CloseCampaignCall) {
    this._call = call;
  }

  get _campaignId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CloseCampaignCall__Outputs {
  _call: CloseCampaignCall;

  constructor(call: CloseCampaignCall) {
    this._call = call;
  }
}

export class CreateCampaignCall extends ethereum.Call {
  get inputs(): CreateCampaignCall__Inputs {
    return new CreateCampaignCall__Inputs(this);
  }

  get outputs(): CreateCampaignCall__Outputs {
    return new CreateCampaignCall__Outputs(this);
  }
}

export class CreateCampaignCall__Inputs {
  _call: CreateCampaignCall;

  constructor(call: CreateCampaignCall) {
    this._call = call;
  }

  get _campaignName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get goalToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get goalAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreateCampaignCall__Outputs {
  _call: CreateCampaignCall;

  constructor(call: CreateCampaignCall) {
    this._call = call;
  }
}

export class DonateCall extends ethereum.Call {
  get inputs(): DonateCall__Inputs {
    return new DonateCall__Inputs(this);
  }

  get outputs(): DonateCall__Outputs {
    return new DonateCall__Outputs(this);
  }
}

export class DonateCall__Inputs {
  _call: DonateCall;

  constructor(call: DonateCall) {
    this._call = call;
  }

  get _tokenAddresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _tokenAmounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _campaignId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DonateCall__Outputs {
  _call: DonateCall;

  constructor(call: DonateCall) {
    this._call = call;
  }
}
